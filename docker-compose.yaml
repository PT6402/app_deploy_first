version: '1.0'
services:
  sql-server:
    container_name: sql-server
    build: ./mssql
    # image: mcr.microsoft.com/mssql/server:2019-latest
    restart: always
    # environment:
    #   ACCEPT_EULA: "Y"
    #   SA_PASSWORD: "Phattran.123"
    ports:
      - 3080:1433
    expose:
      - 3080
    volumes:
      - mssql-data:/var/opt/mssql
    networks:
      - network-app

  backend:
    container_name: backend
    build: 
      context: ./demo_deploye
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - sql-server
    ports:
      - 8085:8083
    volumes:
      - ./demo_deploye:/app
    networks:
      - network-app

  # frontend:
  #   container_name: frontend
  #   build:
  #     context: ./demo_deploy_client
  #     dockerfile: Dockerfile
  #   command: sh -c "npm run build"
  #   environment:
  #     CHOKIDAR_USEPOLLING: "true"



  proxy:
    container_name: proxy
    image: nginx:1.23.3
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./demo_deploy_client/build:/usr/share/nginx/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - network-app

networks:
  network-app:
    name: springboot-app-network
volumes:
  mssql-data:
